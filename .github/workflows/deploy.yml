name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 20m
        script: |
          cd /opt/tune-vote

          echo "::group::📥 Updating Code"
          echo "::notice::Starting deployment #${{ github.run_number }}"
          echo "Current commit: $(git rev-parse HEAD 2>/dev/null || echo 'unknown')"

          # Simple git update
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/art3xias23/tune-vote.git
          git fetch origin main
          git reset --hard origin/main

          echo "::notice::Updated to commit: $(git rev-parse HEAD)"
          echo "::endgroup::"

          echo "::group::🐳 Building Containers"
          # Export build variables
          export REACT_APP_BUILD_NUMBER=${{ github.run_number }}
          export REACT_APP_BUILD_COMMIT=${{ github.sha }}

          echo "::notice::Build #${{ github.run_number }} - $(echo ${{ github.sha }} | cut -c1-7)"

          # Stop and rebuild
          docker compose down
          docker compose build --no-cache backend frontend
          echo "::endgroup::"

          echo "::group::🚀 Starting Services"
          docker compose up -d

          # Clean up old images
          docker system prune -f >/dev/null 2>&1

          echo "::notice::Waiting for services to start..."
          sleep 20
          echo "::endgroup::"

          echo "::group::✅ Health Checks"
          # Test backend
          if curl -f http://localhost:5000/api/health >/dev/null 2>&1; then
            echo "::notice::✅ Backend: Healthy"
          else
            echo "::error::❌ Backend: Failed"
          fi

          # Test frontend
          if curl -s http://localhost:3001/ 2>/dev/null | grep -q "Tune Vote"; then
            echo "::notice::✅ Frontend: Healthy"
          else
            echo "::error::❌ Frontend: Failed"
          fi

          # Check build number
          BUILD_NUM=$(curl -s http://localhost:3001/ 2>/dev/null | grep -o "#[0-9]\+" | head -1)
          if [ -n "$BUILD_NUM" ]; then
            echo "::notice::✅ Build number: $BUILD_NUM"
          else
            echo "::warning::⚠️ Build number not found in HTML"
          fi
          echo "::endgroup::"

          echo "::notice::🎉 Deployment #${{ github.run_number }} completed successfully!"
name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 20m
        script: |
          cd /opt/tune-vote
          echo "=== Starting Deployment ==="
          echo "User: $(whoami)"
          echo "Before: $(git rev-parse HEAD 2>/dev/null || echo 'no git')"

          # Detailed debugging of git directory
          echo "=== Debugging Git Issues ==="
          echo "Git directory ownership:"
          ls -la .git/ | head -10
          echo ""
          echo "Objects directory:"
          ls -la .git/objects/ | head -5
          echo ""
          echo "Current user info:"
          id
          echo ""
          echo "Disk space:"
          df -h .
          echo ""

          # Try to fix permissions with detailed output
          echo "Attempting to fix .git permissions..."
          chmod -v u+w .git/objects 2>&1 || echo "chmod .git/objects failed"
          chmod -v u+w .git/objects/* 2>&1 || echo "chmod .git/objects/* failed"

          # Test git operations step by step
          echo "=== Testing Git Operations ==="

          echo "1. Setting remote URL..."
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/art3xias23/tune-vote.git 2>&1 || echo "Remote set failed"

          echo "2. Testing git fetch..."
          git fetch origin main 2>&1 || echo "Fetch failed - trying alternative"

          if [ $? -ne 0 ]; then
            echo "Fetch failed, trying to reinitialize git..."
            rm -rf .git
            git init
            git remote add origin https://${{ secrets.GH_TOKEN }}@github.com/art3xias23/tune-vote.git
            git fetch origin main
            git checkout -b main origin/main
          else
            echo "3. Testing git reset..."
            git reset --hard origin/main 2>&1 || echo "Reset failed"
          fi

          echo "Final commit: $(git rev-parse HEAD)"

          # Deploy containers with build info
          echo "=== Building and Starting Containers ==="
          echo "Build: #${{ github.run_number }} Commit: ${{ github.sha }}"

          # Stop old containers
          docker compose down

          # Build with environment variables
          REACT_APP_BUILD_NUMBER=${{ github.run_number }} REACT_APP_BUILD_COMMIT=${{ github.sha }} docker compose build --no-cache --progress=plain

          # Start containers
          REACT_APP_BUILD_NUMBER=${{ github.run_number }} REACT_APP_BUILD_COMMIT=${{ github.sha }} docker compose up -d

          # Clean up
          docker system prune -f

          # Wait and test
          echo "=== Waiting for Services ==="
          sleep 20

          echo "=== Testing ==="
          echo "Backend:"
          curl -f http://localhost:5000/api/health 2>/dev/null && echo "✓ OK" || echo "✗ FAIL"

          echo "Frontend:"
          curl -s http://localhost:3001/ 2>/dev/null | grep -q "Tune Vote" && echo "✓ OK" || echo "✗ FAIL"

          echo "Build number in HTML:"
          curl -s http://localhost:3001/ 2>/dev/null | grep -o "#[0-9]\+" | head -1 || echo "Not found"

          echo "=== Done: Build #${{ github.run_number }} ==="
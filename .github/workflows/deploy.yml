name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 20m
        script: |
          cd /opt/tune-vote
          echo "=== Starting Deployment ==="
          echo "Directory: $(pwd)"
          echo "User: $(whoami)"
          echo "Before: $(git rev-parse HEAD 2>/dev/null || echo 'no git')"

          # Use GitHub token for reliable git operations
          export GIT_ASKPASS=/bin/true
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/art3xias23/tune-vote.git
          git fetch origin main
          git reset --hard origin/main
          git clean -fd
          echo "After: $(git rev-parse HEAD)"

          # Deploy containers with build info
          echo "=== Building and Starting Containers ==="
          echo "Build: #${{ github.run_number }} Commit: ${{ github.sha }}"

          # Stop old containers
          docker compose down

          # Build with environment variables
          REACT_APP_BUILD_NUMBER=${{ github.run_number }} REACT_APP_BUILD_COMMIT=${{ github.sha }} docker compose build --no-cache --progress=plain

          # Start containers
          REACT_APP_BUILD_NUMBER=${{ github.run_number }} REACT_APP_BUILD_COMMIT=${{ github.sha }} docker compose up -d

          # Clean up
          docker system prune -f

          # Wait and test
          echo "=== Waiting for Services ==="
          sleep 20

          echo "=== Testing ==="
          echo "Backend:"
          curl -f http://localhost:5000/api/health 2>/dev/null && echo "✓ OK" || echo "✗ FAIL"

          echo "Frontend:"
          curl -s http://localhost:3001/ 2>/dev/null | grep -q "Tune Vote" && echo "✓ OK" || echo "✗ FAIL"

          echo "Build number in HTML:"
          curl -s http://localhost:3001/ 2>/dev/null | grep -o "#[0-9]\+" | head -1 || echo "Not found"

          echo "=== Done: Build #${{ github.run_number }} ==="
name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 20m
        script: |
          cd /opt/tune-vote
          echo "Current directory: $(pwd)"
          echo "Current user: $(whoami)"
          echo "Before pull - Latest commit: $(git rev-parse HEAD)"

          # Fix git permissions and pull
          sudo chown -R $(whoami):$(whoami) .git
          git reset --hard HEAD
          git clean -fd
          git pull origin main
          echo "After pull - Latest commit: $(git rev-parse HEAD)"

          # Fix npm permissions and install dependencies for Spotify proxy
          sudo rm -rf node_modules package-lock.json
          npm install --omit=dev

          # Restart Spotify proxy service
          sudo systemctl restart spotify-proxy
          echo "Spotify proxy status: $(systemctl is-active spotify-proxy)"

          # Set build number and restart Docker containers
          echo "Starting deployment - Build #${{ github.run_number }} - Commit ${{ github.sha }}"

          # Stop containers first
          docker compose down

          # Build and start with environment variables
          REACT_APP_BUILD_NUMBER=${{ github.run_number }} REACT_APP_BUILD_COMMIT=${{ github.sha }} docker compose up -d --build

          # Clean up
          docker system prune -f

          # Wait for containers to be ready
          sleep 15

          # Verify services are running
          echo "=== Service Status ==="
          systemctl is-active spotify-proxy
          docker compose ps

          # Test the services
          echo "=== Testing Services ==="
          curl -f http://localhost:5000/api/health || echo "Backend health check failed"
          curl -f http://localhost:3001/ || echo "Frontend health check failed"
          curl -f http://localhost:5001/spotify/search?q=test&type=artist&limit=1 || echo "Spotify proxy test failed"

          echo "Successfully deployed build #${{ github.run_number }}"
services:
  # MongoDB Database - using local build to avoid registry issues
  mongodb:
    image: mongo:5.0
    container_name: tune-vote-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: TuneVote2024!
      MONGO_INITDB_DATABASE: tunevote
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - tune-vote-network
    command: mongod --auth --bind_ip_all
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: tune-vote-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:TuneVote2024!@mongodb:27017/tunevote?authSource=admin
    ports:
      - "127.0.0.1:5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - tune-vote-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: tune-vote-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - tune-vote-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  tune-vote-network:
    driver: bridge